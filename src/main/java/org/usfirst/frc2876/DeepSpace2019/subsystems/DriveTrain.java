// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc2876.DeepSpace2019.subsystems;

import org.usfirst.frc2876.DeepSpace2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;

import com.ctre.phoenix.motorcontrol.can.TalonSRXConfiguration;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 * 
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_TalonSRX talonSRX1;
    private WPI_TalonSRX talonSRX2;
    private SpeedControllerGroup speedControllerGroupDTLeft;
    private WPI_TalonSRX talonSRX3;
    private WPI_TalonSRX talonSRX4;
    private SpeedControllerGroup speedControllerGroupDTRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // TODO Init these to the correct talonSRXnum
    private final WPI_TalonSRX rightMaster = null;
    private final WPI_TalonSRX leftMaster = null;
    private final WPI_TalonSRX rightFollower = null;
    private final WPI_TalonSRX leftFollower = null;

    // TODO Declare navx

    // TODO Declare a WPI drive, differential drive probably. Not sure why RobotBuilder did not output it.


    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        talonSRX1 = new WPI_TalonSRX(1);

        talonSRX2 = new WPI_TalonSRX(2);

        speedControllerGroupDTLeft = new SpeedControllerGroup(talonSRX1, talonSRX2);
        addChild("SpeedControllerGroupDTLeft", speedControllerGroupDTLeft);

        talonSRX3 = new WPI_TalonSRX(3);

        talonSRX4 = new WPI_TalonSRX(4);

        speedControllerGroupDTRight = new SpeedControllerGroup(talonSRX3, talonSRX4);
        addChild("SpeedControllerGroupDTRight", speedControllerGroupDTRight);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        // TODO initialize navx variable

        // TODO Set inverted modes and such. See
        // https://phoenix-documentation.readthedocs.io/en/latest/ch15_WPIDrive.html

        // TODO configure pid on talons and stuffs. Example how to use
        // configAllSettings:
        // https://github.com/CrossTheRoadElec/Phoenix-Examples-Languages/blob/b71916c131f6b381ba26bb5ac46302180088614d/Java/Config%20All/src/main/java/frc/robot/Configs.java#L19
        TalonSRXConfiguration allConfigs = new TalonSRXConfiguration();
        rightMaster.configAllSettings(allConfigs);

        // TODO initialize wpilib drive variable probably differential drive;
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveControl());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        
        // TODO Call udpate dashboard here

    }
    // TODO Add an update dashboard method

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    // TODO Add adjustSpeed method to control sensitivity of joystick -> drive output.

    // TODO Add arcade drive method

    // TODO Add tank drive method




}
